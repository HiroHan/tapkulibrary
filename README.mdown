TapkuLibrary
=======
TapkuLibrary is a collection of iPhone UI classes intended for broad use in applications.

[http://tapku.com](http://tapku.com)

[![](http://farm3.static.flickr.com/2650/3955573507_23c2781a9c_o.jpg)(http://www.flickr.com/photos/40064022@N02/3955573507/)

Adding TapkuLibrary to your project
==============================

TapkuLibrary is compiled as a static library, and the easiest way to add it to your project is to use Xcode's "dependent project" facilities.  Here is how:

1. Clone the TapkuLibrary git repository: `git clone git://github.com/tapku/tapkulibrary.git`.  Make sure 
   you store the repository in a permanent place because Xcode will need to reference the files
   every time you compile your project.

2. Locate the "TapkuLibrary.xcodeproj" file under "TapkuLibrary".  Drag TapkuLibrary.xcodeproj and drop it onto
   the root of your Xcode project's "Groups and Files"  sidebar.  A dialog will appear -- make sure 
   "Copy items" is unchecked and "Reference Type" is "Relative to Project" before clicking "Add".

3. Now you need to link the TapkuLibrary static library to your project.  Click the "TapkuLibrary.xcodeproj" 
   item that has just been added to the sidebar.  Under the "Details" table, you will see a single
   item: libTapkuLibrary.a.  Check the checkbox on the far right of libTapkuLibrary.a.

4. Now you need to add TapkuLibrary as a dependency of your project, so Xcode compiles it whenever
   you compile your project.  Expand the "Targets" section of the sidebar and double-click your
   application's target.  Under the "General" tab you will see a "Direct Dependencies" section. 
   Click the "+" button, select "TapkuLibrary", and click "Add Target".

5. Now you need to add the bundle of images and strings to your app.  Locate "TapkuLibrary.bundle" under
   "TapkuLibrary" and drag and drop it into your project.  A dialog will appear -- make sure 
   "Create Folder References" is selected,  "Copy items" is unchecked, and "Reference Type" is 
   "Relative to Project" before clicking "Add".

6. Now you need to add the Core Animation framework to your project.  Right click on the
   "Frameworks" group in your project (or equivalent) and select Add > Existing Frameworks. 
   Then locate QuartzCore.framework and add it to the project.

7. Finally, we need to tell your project where to find the TapkuLibrary headers.  Open your
   "Project Settings" and go to the "Build" tab. Look for "Header Search Paths" and double-click
   it.  Add the relative path from your project's directory to the "TapkuLibrary" directory.  Then
   go to "Other Linker Flags" under the "Linker" section, and add "-ObjC" to the list of flags.

8. You're ready to go.  Just #import "TapkuLibrary/TapkuLibrary.h" anywhere you want to use TapkuLibrary classes
   in your project.
  


What's in TapkuLibrary?
==================
                  

UITableView Label Cells
-----------------------

**[TKLabelCell](http://github.com/tapku/tapkulibrary/blob/cd4c3ef7f15bde2128243cc182bb7297235946de/TapkuLibrary/TKLabelCell.h)** is a cell with a label intended to provide information on the rest of the cell similar to the cells that appear in the Address Book.


**[TKLabelTextViewCell](http://github.com/tapku/tapkulibrary/blob/810ba9fc7bbc8ca3a47324f214cd9bdc46e971f1/TapkuLibrary/TKLabelTextViewCell.h)** is a cell with a textview and label.


**[TKLabelTextFieldCell](http://github.com/tapku/tapkulibrary/blob/810ba9fc7bbc8ca3a47324f214cd9bdc46e971f1/TapkuLibrary/TKLabelTextFieldCell.h)** is a cell with a TextField.


**[TKLabelFieldCell](http://github.com/tapku/tapkulibrary/blob/810ba9fc7bbc8ca3a47324f214cd9bdc46e971f1/TapkuLibrary/TKLabelFieldCell.h)** is a cell with an ordinary field label.


**[TKLabelSwitchCell](http://github.com/tapku/tapkulibrary/blob/810ba9fc7bbc8ca3a47324f214cd9bdc46e971f1/TapkuLibrary/TKLabelSwitchCell.h)** is a cell with a switch.



More UITableView Cells
----------------------

**[TKButtonCell](http://github.com/tapku/tapkulibrary/blob/810ba9fc7bbc8ca3a47324f214cd9bdc46e971f1/TapkuLibrary/TKButtonCell.h)** is a simple cell with a label in the middle.


**[FSIndicatorCell](http://github.com/tapku/tapkulibrary/blob/43768ddfec2a6ee5f6ecc963893d0d39ff8ff0be/TapkuLibrary/FSIndicatorCell.h)** Fast Scrolling (FS) cell with a Mail like indicator on the right side of the cell. 


HUD UI
------

**[LoadingHUDView](http://github.com/tapku/tapkulibrary/blob/ef1d5e27e3a63e146f04f9e29494ac495ee0861f/TapkuLibrary/LoadingHUDView.h)** allows you to show a title and message to a loading indicator.



Overvew View Controller
-----------------------
**[TKOverviewTableViewController]()** a table view controller similar to the interface seen in the application Tweetie.



Map View
--------

**[TKMapView](http://github.com/tapku/tapkulibrary/blob/d12f30f79964ff5809d9d6fd9c6112a1a34db68e/TapkuLibrary/TKMapView.h)** allows you to place pins on a map using touch.


Empy View
---------
**[TKEmptyView](http://github.com/tapku/tapkulibrary/blob/d12f30f79964ff5809d9d6fd9c6112a1a34db68e/TapkuLibrary/TKEmptyView.h)** allows is a blank screen view. You can take a transparent 200px x 200px image and it will be styled correctly to match Apple use in various applications.


Graph View Controller
--------------------
**[TKTimeGraphController](http://github.com/tapku/tapkulibrary/blob/d12f30f79964ff5809d9d6fd9c6112a1a34db68e/TapkuLibrary/TKTimeGraphController.h)** is a full screen scrollable graph. 


Calendar View Controller
------------------------
**[TKCalendarViewController](http://github.com/tapku/tapkulibrary/blob/85b9d19454393ae65725bc92c2fb9b04404778c4/TapkuLibrary/TKCalendarViewController.h)** is a controller and view that replicates the Calendar app. 
